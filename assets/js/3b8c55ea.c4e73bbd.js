"use strict";(self.webpackChunklaravel_workflow=self.webpackChunklaravel_workflow||[]).push([[3217],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),u=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(r),m=n,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return r?a.createElement(f,i(i({ref:t},c),{},{components:r})):a.createElement(f,i({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:n,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9803:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:2},i="Installation",l={unversionedId:"installation",id:"installation",title:"Installation",description:"Requirements",source:"@site/docs/installation.md",sourceDirName:".",slug:"/installation",permalink:"/docs/installation",draft:!1,editUrl:"https://github.com/laravel-workflow/laravel-workflow.github.io/edit/main/docs/installation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/introduction"},next:{title:"Defining Workflows",permalink:"/docs/category/defining-workflows"}},s={},u=[{value:"Requirements",id:"requirements",level:2},{value:"Installing Laravel Workflow",id:"installing-laravel-workflow",level:2},{value:"Running Workers",id:"running-workers",level:2}],c={toc:u};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"installation"},"Installation"),(0,n.kt)("h2",{id:"requirements"},"Requirements"),(0,n.kt)("p",null,"Laravel Workflow requires the following to run:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"PHP 8 or later"),(0,n.kt)("li",{parentName:"ul"},"Laravel 9 or later")),(0,n.kt)("p",null,"Laravel Workflow can be used with any queue driver that Laravel supports, including:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Amazon SQS"),(0,n.kt)("li",{parentName:"ul"},"Beanstalkd"),(0,n.kt)("li",{parentName:"ul"},"Database"),(0,n.kt)("li",{parentName:"ul"},"Redis")),(0,n.kt)("p",null,"Each queue driver has its own limitations and requirements. For example, the database queue driver requires a database connection and a ",(0,n.kt)("inlineCode",{parentName:"p"},"jobs")," table, while the Beanstalkd queue driver requires a Beanstalkd server and a ",(0,n.kt)("inlineCode",{parentName:"p"},"default")," tube."),(0,n.kt)("p",null,"Laravel Workflow also requires a cache driver that supports locks. This is used to prevent race conditions and concurrency issues."),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"NOTE: The Amazon SQS queue driver in Laravel has a limitation of 15 minutes (900 seconds) for the maximum visibility timeout of a message. This means that if a workflow uses the ",(0,n.kt)("inlineCode",{parentName:"p"},"WorkflowStub::timer()")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"WorkflowStub::awaitWithTimeout()")," method with a value greater than 900 seconds, it will not be able to hibernate for that long and the workflow will fail. This is a limitation of the SQS driver and not a limitation of Laravel Workflow itself. If you are using Laravel Workflow with the SQS driver then you should be aware of this limitation and avoid using values greater than 900 seconds. Alternatively, you can use a different queue driver that does not have this limitation, such as the Redis driver.")),(0,n.kt)("h2",{id:"installing-laravel-workflow"},"Installing Laravel Workflow"),(0,n.kt)("p",null,"Laravel Workflow is installable via Composer. To install it, run the following command in your Laravel project:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"composer require laravel-workflow/laravel-workflow\n")),(0,n.kt)("p",null,"After installing Laravel Workflow, you must also publish the migrations for the workflows table. This table is used to store and manage workflow data and state. To publish the migrations, run the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},'php artisan vendor:publish --provider="Workflow\\Providers\\WorkflowServiceProvider" --tag="migrations"\n')),(0,n.kt)("p",null,"Once the migrations are published, you can run the migrate command to create the workflows table in your database:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan migrate\n")),(0,n.kt)("h2",{id:"running-workers"},"Running Workers"),(0,n.kt)("p",null,"Laravel Workflow uses Laravel's queued jobs to run workflows and activities in the background. You will need to either run the ",(0,n.kt)("inlineCode",{parentName:"p"},"queue:work")," Artisan command or use Horizon to run your queue workers. This will process the queued workflows and activities and execute them in the background. Without a running queue worker, workflows and activities will not be executed."))}d.isMDXComponent=!0}}]);