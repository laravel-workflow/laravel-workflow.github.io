"use strict";(self.webpackChunklaravel_workflow=self.webpackChunklaravel_workflow||[]).push([[3003],{3905:(e,t,o)=>{o.d(t,{Zo:()=>k,kt:()=>c});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function l(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):l(l({},t),e)),o},k=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,k=i(e,["components","mdxType","originalType","parentName"]),p=u(o),d=r,c=p["".concat(s,".").concat(d)]||p[d]||h[d]||a;return o?n.createElement(c,l(l({ref:t},k),{},{components:o})):n.createElement(c,l({ref:t},k))}));function c(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<a;u++)l[u]=o[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},3714:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var n=o(7462),r=(o(7294),o(3905));const a={sidebar_position:11},l="Webhooks",i={unversionedId:"features/webhooks",id:"features/webhooks",title:"Webhooks",description:"Laravel Workflow provides webhooks that allow external systems to start workflows and send signals dynamically. This feature enables seamless integration with external services, APIs, and automation tools.",source:"@site/docs/features/webhooks.md",sourceDirName:"features",slug:"/features/webhooks",permalink:"/docs/features/webhooks",draft:!1,editUrl:"https://github.com/laravel-workflow/laravel-workflow.github.io/edit/main/docs/features/webhooks.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/docs/features/events"},next:{title:"Configuration",permalink:"/docs/category/configuration"}},s={},u=[{value:"Enabling Webhooks",id:"enabling-webhooks",level:2},{value:"Starting a Workflow via Webhook",id:"starting-a-workflow-via-webhook",level:2},{value:"Webhook URL",id:"webhook-url",level:3},{value:"Example Request",id:"example-request",level:3},{value:"Sending a Signal via Webhook",id:"sending-a-signal-via-webhook",level:2},{value:"Webhook URL",id:"webhook-url-1",level:3},{value:"Example Request",id:"example-request-1",level:3},{value:"Webhook URL Helper",id:"webhook-url-helper",level:2},{value:"Webhook Authentication",id:"webhook-authentication",level:2},{value:"Authentication Methods",id:"authentication-methods",level:3},{value:"Token Authentication",id:"token-authentication",level:3},{value:"Example Request",id:"example-request-2",level:4},{value:"HMAC Signature Authentication",id:"hmac-signature-authentication",level:3},{value:"Example Request",id:"example-request-3",level:4},{value:"Configuring Webhook Routes",id:"configuring-webhook-routes",level:2}],k={toc:u};function p(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},k,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"webhooks"},"Webhooks"),(0,r.kt)("p",null,"Laravel Workflow provides webhooks that allow external systems to start workflows and send signals dynamically. This feature enables seamless integration with external services, APIs, and automation tools."),(0,r.kt)("h2",{id:"enabling-webhooks"},"Enabling Webhooks"),(0,r.kt)("p",null,"To enable webhooks in Laravel Workflow, register the webhook routes in your application\u2019s routes file (",(0,r.kt)("inlineCode",{parentName:"p"},"routes/web.php")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"routes/api.php"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Workflow\\Webhooks;\n\nWebhooks::routes();\n")),(0,r.kt)("p",null,"By default, webhooks will:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Auto-discover workflows in the ",(0,r.kt)("inlineCode",{parentName:"li"},"app/Workflows")," folder."),(0,r.kt)("li",{parentName:"ul"},"Expose webhooks to workflows marked with ",(0,r.kt)("inlineCode",{parentName:"li"},"#[Webhook]")," at the class level."),(0,r.kt)("li",{parentName:"ul"},"Expose webhooks to signal methods marked with ",(0,r.kt)("inlineCode",{parentName:"li"},"#[Webhook]"),".")),(0,r.kt)("h2",{id:"starting-a-workflow-via-webhook"},"Starting a Workflow via Webhook"),(0,r.kt)("p",null,"To expose a workflow as a webhook, add the ",(0,r.kt)("inlineCode",{parentName:"p"},"#[Webhook]")," attribute on the class itself."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Workflow\\Webhook;\nuse Workflow\\Workflow;\n\n#[Webhook]\nclass OrderWorkflow extends Workflow\n{\n    public function execute($orderId)\n    {\n        // your code here\n    }\n}\n")),(0,r.kt)("h3",{id:"webhook-url"},"Webhook URL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /webhooks/start/order-workflow\n")),(0,r.kt)("h3",{id:"example-request"},"Example Request"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST "https://example.com/webhooks/start/order-workflow" \\\n     -H "Content-Type: application/json" \\\n     -d \'{"orderId": 123}\'\n')),(0,r.kt)("h2",{id:"sending-a-signal-via-webhook"},"Sending a Signal via Webhook"),(0,r.kt)("p",null,"To allow external systems to send signals to a workflow, add the ",(0,r.kt)("inlineCode",{parentName:"p"},"#[Webhook]")," attribute on the method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"use Workflow\\SignalMethod;\nuse Workflow\\Webhook;\nuse Workflow\\Workflow;\n\nclass OrderWorkflow extends Workflow\n{\n    protected bool $shipped = false;\n\n    #[SignalMethod]\n    #[Webhook]\n    public function markAsShipped()\n    {\n        $this->shipped = true;\n    }\n}\n")),(0,r.kt)("h3",{id:"webhook-url-1"},"Webhook URL"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /webhooks/signal/order-workflow/{workflowId}/mark-as-shipped\n")),(0,r.kt)("h3",{id:"example-request-1"},"Example Request"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST "https://example.com/webhooks/signal/order-workflow/1/mark-as-shipped" \\\n     -H "Content-Type: application/json"\n')),(0,r.kt)("h2",{id:"webhook-url-helper"},"Webhook URL Helper"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"$this->webhookUrl()")," helper generates webhook URLs for starting workflows or sending signals."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$this->webhookUrl();\n$this->webhookUrl('signalMethod');\n")),(0,r.kt)("p",null,"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"string $signalMethod = '' (optional)")),(0,r.kt)("p",null,"If empty, returns the URL for starting the workflow."),(0,r.kt)("p",null,"If provided, returns the URL for sending a signal to an active workflow instance."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"use Workflow\\Activity;\n\nclass ShipOrderActivity extends Activity\n{\n    public function execute(string $email, StoredWorkflow $storedWorkflow): void\n    {\n        $startUrl = $this->webhookUrl();\n        // $startUrl = '/webhooks/start/order-workflow';\n\n        $signalUrl = $this->webhookUrl('markAsShipped');\n        // $signalUrl = '/webhooks/signal/order-workflow/{workflowId}/mark-as-shipped';\n    }\n}\n")),(0,r.kt)("h2",{id:"webhook-authentication"},"Webhook Authentication"),(0,r.kt)("p",null,"By default, webhooks don't require authentication but this can be configured in ",(0,r.kt)("inlineCode",{parentName:"p"},"config/workflows.php"),"."),(0,r.kt)("h3",{id:"authentication-methods"},"Authentication Methods"),(0,r.kt)("p",null,"Laravel Workflow supports:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"No Authentication (none)"),(0,r.kt)("li",{parentName:"ol"},"Token-based Authentication (token)"),(0,r.kt)("li",{parentName:"ol"},"HMAC Signature Verification (signature)")),(0,r.kt)("h3",{id:"token-authentication"},"Token Authentication"),(0,r.kt)("p",null,"For token authentication, webhooks require a valid API token in the request headers. The default header is ",(0,r.kt)("inlineCode",{parentName:"p"},"Authorization")," but you can change this in the configuration settings."),(0,r.kt)("h4",{id:"example-request-2"},"Example Request"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl -X POST "https://example.com/webhooks/start/order-workflow" \\\n     -H "Content-Type: application/json" \\\n     -H "Authorization: your-api-token" \\\n     -d \'{"orderId": 123}\'\n')),(0,r.kt)("h3",{id:"hmac-signature-authentication"},"HMAC Signature Authentication"),(0,r.kt)("p",null,"For HMAC authentication, Laravel Workflow verifies requests using a secret key. The default header is ",(0,r.kt)("inlineCode",{parentName:"p"},"X-Signature")," but this can also be changed."),(0,r.kt)("h4",{id:"example-request-3"},"Example Request"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'BODY=\'{"orderId": 123}\'\nSIGNATURE=$(echo -n "$BODY" | openssl dgst -sha256 -hmac "your-secret-key" | awk \'{print $2}\')\n\ncurl -X POST "https://example.com/webhooks/start/order-workflow" \\\n     -H "Content-Type: application/json" \\\n     -H "X-Signature: $SIGNATURE" \\\n     -d "$BODY"\n')),(0,r.kt)("h2",{id:"configuring-webhook-routes"},"Configuring Webhook Routes"),(0,r.kt)("p",null,"By default, webhooks are accessible under ",(0,r.kt)("inlineCode",{parentName:"p"},"/webhooks"),". You can customize the route path in ",(0,r.kt)("inlineCode",{parentName:"p"},"config/workflows.php"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"'webhooks_route' => 'api/webhooks',\n")),(0,r.kt)("p",null,"After this change, webhooks will be accessible under:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"POST /api/webhooks/start/order-workflow\nPOST /api/webhooks/signal/order-workflow/{workflowId}/mark-as-shipped\n")))}p.isMDXComponent=!0}}]);