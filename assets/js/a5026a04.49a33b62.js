"use strict";(self.webpackChunklaravel_workflow=self.webpackChunklaravel_workflow||[]).push([[4641],{3905:(e,o,n)=>{n.d(o,{Zo:()=>c,kt:()=>g});var r=n(7294);function t(e,o,n){return o in e?Object.defineProperty(e,o,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[o]=n,e}function i(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);o&&(r=r.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?i(Object(n),!0).forEach((function(o){t(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}function a(e,o){if(null==e)return{};var n,r,t=function(e,o){if(null==e)return{};var n,r,t={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],o.indexOf(n)>=0||(t[n]=e[n]);return t}(e,o);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],o.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var s=r.createContext({}),p=function(e){var o=r.useContext(s),n=o;return e&&(n="function"==typeof e?e(o):l(l({},o),e)),n},c=function(e){var o=p(e.components);return r.createElement(s.Provider,{value:o},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var o=e.children;return r.createElement(r.Fragment,{},o)}},d=r.forwardRef((function(e,o){var n=e.components,t=e.mdxType,i=e.originalType,s=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),f=p(n),d=t,g=f["".concat(s,".").concat(d)]||f[d]||u[d]||i;return n?r.createElement(g,l(l({ref:o},c),{},{components:n})):r.createElement(g,l({ref:o},c))}));function g(e,o){var n=arguments,t=o&&o.mdxType;if("string"==typeof e||t){var i=n.length,l=new Array(i);l[0]=d;var a={};for(var s in o)hasOwnProperty.call(o,s)&&(a[s]=o[s]);a.originalType=e,a[f]="string"==typeof e?e:t,l[1]=a;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},577:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>s,contentTitle:()=>l,default:()=>f,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var r=n(7462),t=(n(7294),n(3905));const i={sidebar_position:1},l="Publishing Config",a={unversionedId:"configuration/publishing-config",id:"configuration/publishing-config",title:"Publishing Config",description:"This will create a workflows.php configuration file in your config folder.",source:"@site/docs/configuration/publishing-config.md",sourceDirName:"configuration",slug:"/configuration/publishing-config",permalink:"/docs/configuration/publishing-config",draft:!1,editUrl:"https://github.com/laravel-workflow/laravel-workflow.github.io/edit/main/docs/configuration/publishing-config.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/category/configuration"},next:{title:"Options",permalink:"/docs/configuration/options"}},s={},p=[{value:"Changing Workflows Folder",id:"changing-workflows-folder",level:2},{value:"Using Custom Models",id:"using-custom-models",level:2},{value:"Changing Serializer",id:"changing-serializer",level:2}],c={toc:p};function f(e){let{components:o,...n}=e;return(0,t.kt)("wrapper",(0,r.Z)({},c,n,{components:o,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"publishing-config"},"Publishing Config"),(0,t.kt)("p",null,"This will create a ",(0,t.kt)("inlineCode",{parentName:"p"},"workflows.php")," configuration file in your ",(0,t.kt)("inlineCode",{parentName:"p"},"config")," folder."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'php artisan vendor:publish --provider="Workflow\\Providers\\WorkflowServiceProvider" --tag="config"\n')),(0,t.kt)("h2",{id:"changing-workflows-folder"},"Changing Workflows Folder"),(0,t.kt)("p",null,"By default, the ",(0,t.kt)("inlineCode",{parentName:"p"},"make")," commands will write to the ",(0,t.kt)("inlineCode",{parentName:"p"},"app/Workflows")," folder."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"php artisan make:workflow MyWorkflow\nphp artisan make:activity MyActivity\n")),(0,t.kt)("p",null,"This can be changed by updating the ",(0,t.kt)("inlineCode",{parentName:"p"},"workflows_folder")," setting."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"'workflows_folder' => 'Workflows',\n")),(0,t.kt)("h2",{id:"using-custom-models"},"Using Custom Models"),(0,t.kt)("p",null,"In the ",(0,t.kt)("inlineCode",{parentName:"p"},"workflows.php")," config file you can update the model classes to use your own."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"'stored_workflow_model' => App\\Models\\StoredWorkflow::class,\n\n'stored_workflow_exception_model' => App\\Models\\StoredWorkflowException::class,\n\n'stored_workflow_log_model' => App\\Models\\StoredWorkflowLog::class,\n\n'stored_workflow_signal_model' => App\\Models\\StoredWorkflowSignal::class,\n\n'stored_workflow_timer_model' => App\\Models\\StoredWorkflowTimer::class,\n")),(0,t.kt)("h2",{id:"changing-serializer"},"Changing Serializer"),(0,t.kt)("p",null,"This setting allows you to optionally use the Base64 serializer instead of Y (kind of like yEnc encoding where it only gets rid of null bytes). The tradeoff is between speed and size. Base64 is faster but adds more overhead. Y is slower but a lot smaller. If you change this it will only affect new workflows and old workflows will revert to whatever they were encoded with to ensure compatibility."),(0,t.kt)("p",null,"The default serializer setting in ",(0,t.kt)("inlineCode",{parentName:"p"},"workflows.php")," is:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"'serializer' => Workflow\\Serializers\\Y::class,\n")),(0,t.kt)("p",null,"To use Base64 instead, update it to:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-php"},"'serializer' => Workflow\\Serializers\\Base64::class,\n")))}f.isMDXComponent=!0}}]);