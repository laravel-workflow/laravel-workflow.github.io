"use strict";(self.webpackChunklaravel_workflow=self.webpackChunklaravel_workflow||[]).push([[2339],{3905:(e,n,r)=>{r.d(n,{Zo:()=>u,kt:()=>f});var t=r(7294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=t.createContext({}),c=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},u=function(e){var n=c(e.components);return t.createElement(p.Provider,{value:n},e.children)},s="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),s=c(r),m=o,f=s["".concat(p,".").concat(m)]||s[m]||d[m]||a;return r?t.createElement(f,l(l({ref:n},u),{},{components:r})):t.createElement(f,l({ref:n},u))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=m;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[s]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<a;c++)l[c]=r[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1174:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var t=r(7462),o=(r(7294),r(3905));const a={sidebar_position:6},l="Pruning Workflows",i={unversionedId:"configuration/pruning-workflows",id:"configuration/pruning-workflows",title:"Pruning Workflows",description:"Sometimes you may want to periodically delete completed workflows that are no longer needed. To accomplish this, you may use the model:prune artisan command.",source:"@site/docs/configuration/pruning-workflows.md",sourceDirName:"configuration",slug:"/configuration/pruning-workflows",permalink:"/docs/configuration/pruning-workflows",draft:!1,editUrl:"https://github.com/laravel-workflow/laravel-workflow.github.io/edit/main/docs/configuration/pruning-workflows.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Microservices",permalink:"/docs/configuration/microservices"},next:{title:"Constraints",permalink:"/docs/category/constraints"}},p={},c=[],u={toc:c};function s(e){let{components:n,...r}=e;return(0,o.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"pruning-workflows"},"Pruning Workflows"),(0,o.kt)("p",null,"Sometimes you may want to periodically delete completed workflows that are no longer needed. To accomplish this, you may use the ",(0,o.kt)("inlineCode",{parentName:"p"},"model:prune")," artisan command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'php artisan model:prune --model="Workflow\\Models\\StoredWorkflow"\n')),(0,o.kt)("p",null,"By default, only completed workflows older than 1 month are pruned. You can control this via configuration setting."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"'prune_age' => '1 month',\n")),(0,o.kt)("p",null,"You can schedule the ",(0,o.kt)("inlineCode",{parentName:"p"},"model:prune")," artisan command in your application's ",(0,o.kt)("inlineCode",{parentName:"p"},"routes/console.php")," file."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"Schedule::command('model:prune', [\n    '--model' => StoredWorkflow::class,\n])->daily();\n")),(0,o.kt)("p",null,"You can also control which workflows are pruned by extending the base workflow model and implementing your own ",(0,o.kt)("inlineCode",{parentName:"p"},"prunable")," method."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"public function prunable(): Builder\n{\n    return static::where('status', 'completed')\n            ->where('created_at', '<=', now()->subMonth())\n            ->whereDoesntHave('parents');\n}\n")),(0,o.kt)("p",null,"You may test the ",(0,o.kt)("inlineCode",{parentName:"p"},"model:prune")," command with the ",(0,o.kt)("inlineCode",{parentName:"p"},"--pretend")," option. When pretending, the ",(0,o.kt)("inlineCode",{parentName:"p"},"model:prune")," command will report how many records would be pruned if the command were to actually run."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'php artisan model:prune --model="Workflow\\Models\\StoredWorkflow" --pretend\n')))}s.isMDXComponent=!0}}]);