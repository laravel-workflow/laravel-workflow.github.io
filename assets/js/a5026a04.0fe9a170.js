"use strict";(self.webpackChunklaravel_workflow=self.webpackChunklaravel_workflow||[]).push([[4641],{3905:(e,o,n)=>{n.d(o,{Zo:()=>c,kt:()=>g});var t=n(7294);function r(e,o,n){return o in e?Object.defineProperty(e,o,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[o]=n,e}function l(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?l(Object(n),!0).forEach((function(o){r(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}function i(e,o){if(null==e)return{};var n,t,r=function(e,o){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],o.indexOf(n)>=0||(r[n]=e[n]);return r}(e,o);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],o.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),p=function(e){var o=t.useContext(s),n=o;return e&&(n="function"==typeof e?e(o):a(a({},o),e)),n},c=function(e){var o=p(e.components);return t.createElement(s.Provider,{value:o},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},f=t.forwardRef((function(e,o){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),f=r,g=u["".concat(s,".").concat(f)]||u[f]||d[f]||l;return n?t.createElement(g,a(a({ref:o},c),{},{components:n})):t.createElement(g,a({ref:o},c))}));function g(e,o){var n=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var l=n.length,a=new Array(l);a[0]=f;var i={};for(var s in o)hasOwnProperty.call(o,s)&&(i[s]=o[s]);i.originalType=e,i[u]="string"==typeof e?e:r,a[1]=i;for(var p=2;p<l;p++)a[p]=n[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},577:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var t=n(7462),r=(n(7294),n(3905));const l={sidebar_position:1},a="Publishing Config",i={unversionedId:"configuration/publishing-config",id:"configuration/publishing-config",title:"Publishing Config",description:"This will create a workflows.php configuration file in your config folder.",source:"@site/docs/configuration/publishing-config.md",sourceDirName:"configuration",slug:"/configuration/publishing-config",permalink:"/docs/configuration/publishing-config",draft:!1,editUrl:"https://github.com/laravel-workflow/laravel-workflow.github.io/edit/main/docs/configuration/publishing-config.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/docs/category/configuration"},next:{title:"Options",permalink:"/docs/configuration/options"}},s={},p=[{value:"Changing Workflows Folder",id:"changing-workflows-folder",level:2},{value:"Using Custom Models",id:"using-custom-models",level:2},{value:"Changing Base Model",id:"changing-base-model",level:2}],c={toc:p};function u(e){let{components:o,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,n,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"publishing-config"},"Publishing Config"),(0,r.kt)("p",null,"This will create a ",(0,r.kt)("inlineCode",{parentName:"p"},"workflows.php")," configuration file in your ",(0,r.kt)("inlineCode",{parentName:"p"},"config")," folder."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'php artisan vendor:publish --provider="Workflow\\Providers\\WorkflowServiceProvider" --tag="config"\n')),(0,r.kt)("h2",{id:"changing-workflows-folder"},"Changing Workflows Folder"),(0,r.kt)("p",null,"By default, the ",(0,r.kt)("inlineCode",{parentName:"p"},"make")," commands will write to the ",(0,r.kt)("inlineCode",{parentName:"p"},"app/Workflows")," folder."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"php artisan make:workflow MyWorkflow\nphp artisan make:activity MyActivity\n")),(0,r.kt)("p",null,"This can be changed by updating the ",(0,r.kt)("inlineCode",{parentName:"p"},"workflows_folder")," setting."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"'workflows_folder' => 'Workflows',\n")),(0,r.kt)("h2",{id:"using-custom-models"},"Using Custom Models"),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"workflows.php")," config file you can update the model classes to use your own."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"'stored_workflow_model' => App\\Models\\StoredWorkflow::class,\n\n'stored_workflow_exception_model' => App\\Models\\StoredWorkflowException::class,\n\n'stored_workflow_log_model' => App\\Models\\StoredWorkflowLog::class,\n\n'stored_workflow_signal_model' => App\\Models\\StoredWorkflowSignal::class,\n\n'stored_workflow_timer_model' => App\\Models\\StoredWorkflowTimer::class,\n")),(0,r.kt)("h2",{id:"changing-base-model"},"Changing Base Model"),(0,r.kt)("p",null,"By default, the workflow models extend ",(0,r.kt)("inlineCode",{parentName:"p"},"Illuminate\\Database\\Eloquent\\Model")," but some packages like ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mongodb/laravel-mongodb"},"https://github.com/mongodb/laravel-mongodb")," require you to extend their model, such as in this example, ",(0,r.kt)("inlineCode",{parentName:"p"},"MongoDB\\Laravel\\Eloquent\\Model"),"."),(0,r.kt)("p",null,"This can be changed by updating the ",(0,r.kt)("inlineCode",{parentName:"p"},"base_model")," setting."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"'base_model' => Illuminate\\Database\\Eloquent\\Model::class,\n")),(0,r.kt)("p",null,"It should now look like this."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"'base_model' => MongoDB\\Laravel\\Eloquent\\Model::class,\n")))}u.isMDXComponent=!0}}]);