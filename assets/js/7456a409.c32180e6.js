"use strict";(self.webpackChunklaravel_workflow=self.webpackChunklaravel_workflow||[]).push([[2719],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function p(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?p(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):p(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},p=Object.keys(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(r=0;r<p.length;r++)a=p[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var o=r.createContext({}),s=function(e){var t=r.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,p=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(a),m=n,h=u["".concat(o,".").concat(m)]||u[m]||d[m]||p;return a?r.createElement(h,i(i({ref:t},c),{},{components:a})):r.createElement(h,i({ref:t},c))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=a.length,i=new Array(p);i[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var s=2;s<p;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},3718:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>p,metadata:()=>l,toc:()=>s});var r=a(7462),n=(a(7294),a(3905));const p={sidebar_position:7},i="Sample App",l={unversionedId:"sample-app",id:"sample-app",title:"Sample App",description:"This is a sample Laravel 11 application with example workflows that you can run inside a GitHub codespace.",source:"@site/docs/sample-app.md",sourceDirName:".",slug:"/sample-app",permalink:"/docs/sample-app",draft:!1,editUrl:"https://github.com/laravel-workflow/laravel-workflow.github.io/edit/main/docs/sample-app.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Constraints Summary",permalink:"/docs/constraints/constraints-summary"},next:{title:"Testing",permalink:"/docs/testing"}},o={},s=[{value:"Step 1",id:"step-1",level:3},{value:"Step 2",id:"step-2",level:3},{value:"Step 3",id:"step-3",level:3},{value:"Step 4",id:"step-4",level:3},{value:"Step 5",id:"step-5",level:3},{value:"Step 6",id:"step-6",level:3},{value:"Step 7",id:"step-7",level:3},{value:"Step 8",id:"step-8",level:3},{value:"Step 9",id:"step-9",level:3}],c={toc:s};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"sample-app"},"Sample App"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/laravel-workflow/sample-app"},"This")," is a sample Laravel 11 application with example workflows that you can run inside a GitHub codespace."),(0,n.kt)("h3",{id:"step-1"},"Step 1"),(0,n.kt)("p",null,"Create a codespace from the main branch of ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/laravel-workflow/sample-app"},"this")," repo."),(0,n.kt)("img",{src:"https://user-images.githubusercontent.com/1130888/233664377-f300ad50-5436-4bb8-b172-c52e12047264.png",alt:"image",width:"300"}),(0,n.kt)("h3",{id:"step-2"},"Step 2"),(0,n.kt)("p",null,"Wait for the codespace to build. This should take between 5 to 10 minutes."),(0,n.kt)("img",{src:"https://user-images.githubusercontent.com/1130888/233664397-4ae156f3-f69b-406f-b6d4-4f9316684000.png",alt:"image",width:"500"}),(0,n.kt)("h3",{id:"step-3"},"Step 3"),(0,n.kt)("p",null,"Once the codespace has been created. You will see the editor and the terminal at the bottom."),(0,n.kt)("img",{src:"https://user-images.githubusercontent.com/1130888/233665550-1a4f2098-2919-4108-ac9f-bef1a9f2f47c.png",alt:"image",width:"400"}),(0,n.kt)("h3",{id:"step-4"},"Step 4"),(0,n.kt)("p",null,"Run the migrations to create the necessary database tables."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan migrate\n")),(0,n.kt)("h3",{id:"step-5"},"Step 5"),(0,n.kt)("p",null,"Start the queue worker. This will enable the processing of workflows and activities."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan queue:work\n")),(0,n.kt)("h3",{id:"step-6"},"Step 6"),(0,n.kt)("p",null,"Create a new terminal window."),(0,n.kt)("img",{src:"https://user-images.githubusercontent.com/1130888/233666917-029247c7-9e6c-46de-b304-27473fd34517.png",alt:"image",width:"200"}),(0,n.kt)("h3",{id:"step-7"},"Step 7"),(0,n.kt)("p",null,"Start the example workflow inside the new terminal window."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan app:workflow\n")),(0,n.kt)("h3",{id:"step-8"},"Step 8"),(0,n.kt)("p",null,"You can view the waterline dashboard via the mapped port."),(0,n.kt)("img",{src:"https://user-images.githubusercontent.com/1130888/233668485-b988e336-0462-4bbc-bb77-78c73df363b4.png",alt:"image",width:"500"}),(0,n.kt)("p",null,"Add ",(0,n.kt)("inlineCode",{parentName:"p"},"/waterline/dashboard")," to the URL e.g. ",(0,n.kt)("inlineCode",{parentName:"p"},"https://[your-codespace-name]-80.preview.app.github.dev/waterline/dashboard")),(0,n.kt)("img",{src:"https://user-images.githubusercontent.com/1130888/233669600-3340ada6-5f73-4602-8d82-a81a9d43f883.png",alt:"image",width:"600"}),(0,n.kt)("h3",{id:"step-9"},"Step 9"),(0,n.kt)("p",null,"Run the workflow and activity tests."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"php artisan test\n")),(0,n.kt)("p",null,"That's it! You can now create and test workflows."))}u.isMDXComponent=!0}}]);