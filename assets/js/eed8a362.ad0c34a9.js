"use strict";(self.webpackChunklaravel_workflow=self.webpackChunklaravel_workflow||[]).push([[1692],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),f=i,m=p["".concat(s,".").concat(f)]||p[f]||d[f]||r;return n?o.createElement(m,a(a({ref:t},u),{},{components:n})):o.createElement(m,a({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<r;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6222:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var o=n(7462),i=(n(7294),n(3905));const r={sidebar_position:2},a="Options",l={unversionedId:"configuration/options",id:"configuration/options",title:"Options",description:"Laravel Workflow allows you to specify various options when defining your workflows and activities. These options include the number of times a workflow or activity may be attempted before it fails, the connection and queue, and the maximum number of seconds it is allowed to run.",source:"@site/docs/configuration/options.md",sourceDirName:"configuration",slug:"/configuration/options",permalink:"/docs/configuration/options",draft:!1,editUrl:"https://github.com/laravel-workflow/laravel-workflow.github.io/edit/main/docs/configuration/options.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Publishing Config",permalink:"/docs/configuration/publishing-config"},next:{title:"Ensuring Same Server",permalink:"/docs/configuration/ensuring-same-server"}},s={},c=[{value:"Connection",id:"connection",level:2},{value:"Queue",id:"queue",level:2},{value:"Retries",id:"retries",level:2},{value:"Timeout",id:"timeout",level:2},{value:"Backoff",id:"backoff",level:2}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"options"},"Options"),(0,i.kt)("p",null,"Laravel Workflow allows you to specify various options when defining your workflows and activities. These options include the number of times a workflow or activity may be attempted before it fails, the connection and queue, and the maximum number of seconds it is allowed to run."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"use Workflow\\Activity;\n\nclass MyActivity extends Activity\n{\n    public $connection = 'default';\n    public $queue = 'default';\n\n    public $tries = 0;\n    public $timeout = 0;\n\n    public function backoff()\n    {\n        return [1, 2, 5, 10, 15, 30, 60, 120];\n    }\n}\n")),(0,i.kt)("h2",{id:"connection"},"Connection"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"$connection")," setting is used to specify which queue connection the workflow or activity should be sent to. By default, the ",(0,i.kt)("inlineCode",{parentName:"p"},"$connection")," value is not set which will use the default connection. This can be overridden by setting the ",(0,i.kt)("inlineCode",{parentName:"p"},"$connection")," property on the workflow or activity class."),(0,i.kt)("h2",{id:"queue"},"Queue"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"$queue")," setting is used to specify which queue the workflow or activity should be added to. By default, the ",(0,i.kt)("inlineCode",{parentName:"p"},"$queue")," value is not set which uses the default queue for the specified connection. This can be overridden by setting the ",(0,i.kt)("inlineCode",{parentName:"p"},"$queue")," property on the workflow or activity class."),(0,i.kt)("h2",{id:"retries"},"Retries"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"$tries")," setting is used to control the number of retries an activity is attempted before it is considered failed. By default, the ",(0,i.kt)("inlineCode",{parentName:"p"},"$tries")," value is set to 0 which means it will be retried forever. This can be overridden by setting the ",(0,i.kt)("inlineCode",{parentName:"p"},"$tries")," property on the activity class."),(0,i.kt)("h2",{id:"timeout"},"Timeout"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"$timeout")," setting is used to control the maximum number of seconds an activity is allowed to run before it is killed. By default, the ",(0,i.kt)("inlineCode",{parentName:"p"},"$timeout")," value is set to 0 seconds which means it can run forever. This can be overridden by setting the ",(0,i.kt)("inlineCode",{parentName:"p"},"$timeout")," property on the activity class."),(0,i.kt)("h2",{id:"backoff"},"Backoff"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"backoff")," method returns an array of integers corresponding to the current attempt. The default ",(0,i.kt)("inlineCode",{parentName:"p"},"backoff")," method decays exponentially to 2 minutes. This can be overridden by implementing the ",(0,i.kt)("inlineCode",{parentName:"p"},"backoff")," method on the activity class."))}p.isMDXComponent=!0}}]);