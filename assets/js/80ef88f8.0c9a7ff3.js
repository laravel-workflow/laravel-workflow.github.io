"use strict";(self.webpackChunklaravel_workflow=self.webpackChunklaravel_workflow||[]).push([[187],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>w});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},f="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),f=u(n),d=o,w=f["".concat(s,".").concat(d)]||f[d]||p[d]||a;return n?r.createElement(w,l(l({ref:t},c),{},{components:n})):r.createElement(w,l({ref:t},c))}));function w(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[f]="string"==typeof e?e:o,l[1]=i;for(var u=2;u<a;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4171:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>f,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1},l="Signals",i={unversionedId:"features/signals",id:"features/signals",title:"Signals",description:"Signals allow you to trigger events in a workflow from outside the workflow. This can be useful for reacting to external events or for signaling the completion of an external task.",source:"@site/docs/features/signals.md",sourceDirName:"features",slug:"/features/signals",permalink:"/docs/features/signals",draft:!1,editUrl:"https://github.com/laravel-workflow/laravel-workflow.github.io/edit/main/docs/features/signals.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Features",permalink:"/docs/category/features"},next:{title:"Queries",permalink:"/docs/features/queries"}},s={},u=[],c={toc:u};function f(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"signals"},"Signals"),(0,o.kt)("p",null,"Signals allow you to trigger events in a workflow from outside the workflow. This can be useful for reacting to external events or for signaling the completion of an external task."),(0,o.kt)("p",null,"To define a signal method on your workflow, use the ",(0,o.kt)("inlineCode",{parentName:"p"},"SignalMethod")," annotation. The method will be called with any arguments provided when the signal is triggered:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"use Workflow\\SignalMethod;\nuse Workflow\\Workflow;\n\nclass MyWorkflow extends Workflow\n{\n    protected $ready = false;\n\n    #[SignalMethod]\n    public function setReady($ready)\n    {\n        $this->ready = $ready;\n    }\n}\n")),(0,o.kt)("p",null,"To trigger a signal on a workflow, call the method on the workflow instance. The signal method accepts optional arguments that will also be passed to it."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"use Workflow\\WorkflowStub;\n\n$workflow = WorkflowStub::load($workflowId);\n\n$workflow->setReady(true);\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"WorkflowStub::await()")," method can be used in a workflow to pause execution until a specified condition is met. For example, to pause the workflow until a signal is received, the following code can be used:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"use Workflow\\Workflow;\nuse Workflow\\WorkflowStub;\n\nclass MyWorkflow extends Workflow\n{\n    private bool $ready = false;\n\n    public function execute()\n    {\n        yield WorkflowStub::await(fn () => $this->ready);\n    }\n}\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Important:")," The ",(0,o.kt)("inlineCode",{parentName:"p"},"await()")," method should only be used in a workflow, and not in an activity."))}f.isMDXComponent=!0}}]);