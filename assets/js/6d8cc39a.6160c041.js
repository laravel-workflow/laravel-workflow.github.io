"use strict";(self.webpackChunklaravel_workflow=self.webpackChunklaravel_workflow||[]).push([[2510],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},w=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=s(n),w=o,m=p["".concat(u,".").concat(w)]||p[w]||f[w]||a;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=w;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}w.displayName="MDXCreateElement"},5928:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:12},i="Continue As New",l={unversionedId:"features/continue-as-new",id:"features/continue-as-new",title:"Continue As New",description:"Laravel Workflow supports the Continue As New pattern, allowing a running workflow to restart itself with new arguments.",source:"@site/docs/features/continue-as-new.md",sourceDirName:"features",slug:"/features/continue-as-new",permalink:"/docs/features/continue-as-new",draft:!1,editUrl:"https://github.com/laravel-workflow/laravel-workflow.github.io/edit/main/docs/features/continue-as-new.md",tags:[],version:"current",sidebarPosition:12,frontMatter:{sidebar_position:12},sidebar:"tutorialSidebar",previous:{title:"Webhooks",permalink:"/docs/features/webhooks"},next:{title:"Configuration",permalink:"/docs/category/configuration"}},u={},s=[{value:"Using <code>continueAsNew</code>",id:"using-continueasnew",level:2}],c={toc:s};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"continue-as-new"},"Continue As New"),(0,o.kt)("p",null,"Laravel Workflow supports the ",(0,o.kt)("strong",{parentName:"p"},"Continue As New")," pattern, allowing a running workflow to restart itself with new arguments.\nThis is useful when you need to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Prevent unbounded workflow history growth."),(0,o.kt)("li",{parentName:"ul"},"Model iterative loops or recursive workflows."),(0,o.kt)("li",{parentName:"ul"},"Split long-running workflows into smaller, manageable executions while preserving continuity.")),(0,o.kt)("h2",{id:"using-continueasnew"},"Using ",(0,o.kt)("inlineCode",{parentName:"h2"},"continueAsNew")),(0,o.kt)("p",null,"To restart a workflow as new, call the static method ",(0,o.kt)("inlineCode",{parentName:"p"},"WorkflowStub::continueAsNew(...)")," from within the workflow\u2019s ",(0,o.kt)("inlineCode",{parentName:"p"},"execute()")," method."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"use Workflow\\ActivityStub;\nuse Workflow\\Workflow;\nuse Workflow\\WorkflowStub;\n\nclass CounterWorkflow extends Workflow\n{\n    public function execute(int $count = 0, int $max = 3)\n    {\n        $result = yield ActivityStub::make(CountActivity::class, $count);\n\n        if ($count >= $max) {\n            return 'workflow_' . $result;\n        }\n\n        return yield WorkflowStub::continueAsNew($count + 1, $max);\n    }\n}\n")),(0,o.kt)("p",null,"In this example:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The workflow executes an activity each iteration."),(0,o.kt)("li",{parentName:"ul"},"If the maximum count has not been reached, it continues as new with incremented arguments."),(0,o.kt)("li",{parentName:"ul"},"The final result is returned only when the loop completes.")))}p.isMDXComponent=!0}}]);